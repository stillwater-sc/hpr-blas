// HPRBLAS standard header
//
// Copyright (C) 2017-2021 Stillwater Supercomputing, Inc.
//
// This file is part of the HPR-BLAS project, which is released under an MIT Open Source license.
#ifndef _HPRBLAS_STANDARD_HEADER_
#define _HPRBLAS_STANDARD_HEADER_

////////////////////////////////////////////////////////////////////////////////////////
///  BEHAVIORAL COMPILATION SWITCHES for posit library configuration

////////////////////////////////////////////////////////////////////////////////////////
// enable/disable special posit format I/O
// POSIT_ROUNDING_ERROR_FREE_IO_FORMAT
// default is to print (long double) values
// #define POSIT_ROUNDING_ERROR_FREE_IO_FORMAT 0

////////////////////////////////////////////////////////////////////////////////////////
// enable/disable the ability to use literals in binary logic and arithmetic operators
// POSIT_ENABLE_LITERALS)
// default is to enable them
// #define POSIT_ENABLE_LITERALS 1

////////////////////////////////////////////////////////////////////////////////////////
// enable throwing specific exceptions for posit arithmetic errors
// left to application to enable
// POSIT_THROW_ARITHMETIC_EXCEPTION
// default is to use NaR as a signalling error
// #define POSIT_THROW_ARITHMETIC_EXCEPTION 0

////////////////////////////////////////////////////////////////////////////////////////
/// INCLUDE FILES posit library
#include <universal/number/posit/posit.hpp>

///////////////////////////////////////////////////////////////////////////////////////
/// useful mathematical property functions
#include <universal/functions/functions.hpp>

///////////////////////////////////////////////////////////////////////////////////////
/// the underlying matrix/vector machinery
#ifndef MTL_WITH_INITLIST
#define MTL_WITH_INITLIST
#endif
#include <boost/numeric/mtl/mtl.hpp>

///////////////////////////////////////////////////////////////////////////////////////
/// the High-Performance Reproducible Basic Linear Algebra Subroutines
/// L1, L2, and L3 matrix/vector operations
#include <hprblas.hpp>
/// norms (l1, l2, linf, Frobenius) using HPR methods
#include <norms.hpp>

///////////////////////////////////////////////////////////////////////////////////////
/// linear system solvers
#include <solvers/lu_decomposition.hpp>
#include <solvers/cholesky.hpp>
#include <solvers/ldlt.hpp>
#include <solvers/gauss_jordan.hpp>


#endif
